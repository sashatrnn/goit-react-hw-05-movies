{"version":3,"file":"static/js/76.7d1809ac.chunk.js","mappings":"sQACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAA8F,sBAA9F,EAA+H,uB,SCKhH,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAO,mCAAG,2FACdJ,GAAa,GADC,mBAGOK,EAAAA,EAAAA,IAAgBJ,GAHvB,OAGNK,EAHM,OAIZR,GAAQ,OAAIQ,IAJA,gDAMZC,QAAQC,IAAR,MANY,yBAQZR,GAAa,GARD,4EAAH,qDAWbI,GAZC,CAaF,GAAE,CAACH,KAGF,gCACGF,IAAa,SAACU,EAAA,EAAD,IACbZ,EAAKa,OAAS,GACb,eAAIC,UAAWC,EAAf,SACGf,EAAKgB,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,cAAeC,EAAS,EAATA,GACnD,OACE,gBAAIN,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXM,IACEJ,EAAY,yCAC0BA,GAClC,kHAENK,IAAKH,KAEP,cAAGL,UAAWC,EAAd,SAA6BI,KAC7B,eAAGL,UAAWC,EAAd,UAA4B,IAAEG,EAAU,SAXRE,EAcrC,OAGH,uBAAG,6DAIV,C,+LCxDDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,qBAAgC,CACrDG,OAAQ,CACNC,KAAM,KAHqB,uBACvBlB,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qDASjBmB,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,eAA0B,CAC/CG,OAAQ,CACNG,MAAOA,EACPF,KAAM,KAJgB,uBAClBlB,EADkB,EAClBA,KADkB,kBAOnBA,GAPmB,2CAAH,sDAUZqB,EAAe,mCAAG,WAAMV,GAAN,yFACNG,EAAAA,EAAAA,IAAA,gBAAmBH,IADb,uBACrBX,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfD,EAAe,mCAAG,WAAMY,GAAN,yFACNG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aADM,uBACrBX,EADqB,EACrBA,KADqB,kBAEtBA,EAAKT,MAFiB,2CAAH,sDAKf+B,EAAe,mCAAG,WAAMX,GAAN,yFACNG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aADM,uBACrBX,EADqB,EACrBA,KADqB,kBAEtBA,EAAKuB,SAFiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImg\":\"Cast_castImg__T4WbF\",\"castText\":\"Cast_castText__P--Rp\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'services/moviesApi';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const getCast = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getMovieCredits(movieId);\n        setCast([...data]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {cast.length > 0 ? (\n        <ul className={css.castList}>\n          {cast.map(({ profile_path, character, original_name, id }) => {\n            return (\n              <li className={css.castItem} key={id}>\n                <img\n                  className={css.castImg}\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                  }\n                  alt={original_name}\n                />\n                <p className={css.castText}>{original_name}</p>\n                <p className={css.castText}>\"{character}\"</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>Sorry, we have no information about cast of this movie</p>\n      )}\n    </>\n  );\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'c665198cf22d79697e7d5dc85f192a7c',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      query: query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["Cast","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","getCast","getMovieCredits","data","console","log","Loader","length","className","css","map","profile_path","character","original_name","id","src","alt","axios","api_key","getTrendingMovies","params","page","searchMovies","query","getMovieDetails","getMovieReviews","results"],"sourceRoot":""}