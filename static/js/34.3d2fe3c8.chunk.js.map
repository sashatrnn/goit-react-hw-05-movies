{"version":3,"file":"static/js/34.3d2fe3c8.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"movieItem\":\"MovieList_movieItem__qe2ZM\",\"navItem\":\"MovieList_navItem__TbQ-r\",\"movieName\":\"MovieList_movieName__sBSsG\",\"movieImage\":\"MovieList_movieImage__txbdB\"};","import { useLocation } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport css from './MovieList.module.css';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieList = ({ movies, link }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {movies.map(({ poster_path, name, title, id }) => {\n        return (\n          <li className={css.movieItem} key={id}>\n            <NavLink\n              className={css.navItem}\n              to={`${link}${id}`}\n              state={{ from: location }}\n            >\n              <img\n                className={css.movieImage}\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                }\n                alt={title}\n              />\n\n              <h3 className={css.movieName}>{name || title}</h3>\n            </NavLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      name: propTypes.string,\n      title: propTypes.string,\n    }).isRequired\n  ).isRequired,\n  link: propTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Movies_main__zVRJ-\",\"formWrapper\":\"Movies_formWrapper__jM68V\",\"form\":\"Movies_form__4ow+Z\",\"button\":\"Movies_button__GcIka\",\"input\":\"Movies_input__KrUqs\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/moviesApi';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\nimport css from './Movies.module.css'\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function Movies() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    const getMovies = async () => {\n      setIsLoading(true);\n      try {\n        setSearchQuery(movieName);\n        const data = await searchMovies(movieName);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [movieName]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const inputValue = event.target.elements.movieName.value\n      .trim()\n      .toLowerCase();\n\n    if (inputValue === '') {\n      return toast.warning('Please, enter movie name.');\n    }\n\n    setSearchParams({ query: searchQuery });\n    event.target.reset();\n  };\n\n  return (\n    <main className={css.main}>\n      <div className={css.formWrapper}>\n        <form  className={css.form} onSubmit={handleSubmit}>\n          <button className={css.button} type=\"submit\"></button>\n          <input className={css.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            name=\"movieName\"\n            onChange={e => setSearchQuery(e.target.value)}\n          />\n        </form>\n      </div>\n      {isLoading ? <Loader /> : <MovieList movies={movies} link={''} />}\n    </main>\n  );\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'c665198cf22d79697e7d5dc85f192a7c',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      query: query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["MovieList","movies","link","location","useLocation","className","css","map","poster_path","name","title","id","to","state","from","src","alt","Movies","useState","isLoading","setIsLoading","setMovies","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","getMovies","searchMovies","data","results","console","log","onSubmit","event","preventDefault","target","elements","value","trim","toLowerCase","toast","query","reset","type","autoComplete","autoFocus","placeholder","onChange","e","Loader","axios","api_key","getTrendingMovies","params","page","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}